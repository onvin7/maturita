<?php

namespace App\Controllers\Admin;

use App\Models\Article;
use App\Models\Category;

use function imagecreatefromjpeg;
use function imagecreatefrompng;
use function imagecreatefromgif;

class ArticleAdminController
{
    private $model;
    private $articleModel;

    public function __construct($db)
    {
        $this->model = $db;
        $this->articleModel = new Article($db);
    }

    public function index()
    {
        $sortBy = $_GET['sort_by'] ?? 'datum'; // V√Ωchoz√≠ ≈ôazen√≠ podle data
        $order = $_GET['order'] ?? 'DESC';    // V√Ωchoz√≠ sestupn√© ≈ôazen√≠
        $filter = $_GET['filter'] ?? '';      // V√Ωchoz√≠ bez filtru

        $articles = $this->articleModel->getAllWithSortingAndFiltering($sortBy, $order, $filter);

        $view = '../../app/Views/Admin/articles/index.php';
        include '../../app/Views/Admin/layout/base.php';
    }


    // Formul√°≈ô pro vytvo≈ôen√≠ ƒçl√°nku
    public function create()
    {
        $categoryModel = new Category($this->model); // Pou≈æit√≠ modelu kategorie
        $categories = $categoryModel->getAll(); // Naƒçten√≠ kategori√≠
        $view = '../../app/Views/Admin/articles/create.php';
        include '../../app/Views/Admin/layout/base.php';
    }

    // Ukl√°d√°n√≠ nov√©ho ƒçl√°nku
    public function store($postData)
    {
        if (empty($postData['nazev'])) {
            echo "N√°zev ƒçl√°nku je povinn√Ω.";
            return;
        }
        if (empty($postData['content'])) {
            echo "Obsah ƒçl√°nku je povinn√Ω.";
            return;
        }

        // Zpracov√°n√≠ nahr√°n√≠ souboru
        $nahledFoto = "default.jpg";
        $targetDir = __DIR__ . '../../../../public/uploads/thumbnails/';

        if (isset($_FILES['nahled_foto']) && $_FILES['nahled_foto']['error'] === UPLOAD_ERR_OK) {
            $uniqueName = basename($_FILES['nahled_foto']['name']);

            $largeDir = $targetDir . 'velke/';
            $smallDir = $targetDir . 'male/';
            $largeFilePath = $largeDir . $uniqueName;
            $smallFilePath = $smallDir . $uniqueName;

            // ‚úÖ **Vytvo≈ôen√≠ adres√°≈ô≈Ø, pokud neexistuj√≠**
            if (!is_dir($largeDir)) {
                mkdir($largeDir, 0777, true);
            }
            if (!is_dir($smallDir)) {
                mkdir($smallDir, 0777, true);
            }

            // ‚úÖ **P≈ôesun origin√°ln√≠ho souboru do slo≈æky "velke"**
            if (move_uploaded_file($_FILES['nahled_foto']['tmp_name'], $largeFilePath)) {
                // ‚úÖ **Vytvo≈ôen√≠ n√°hledu s pomƒõrem 3:2**
                $this->createThumbnail($largeFilePath, $smallFilePath, 300, 200);

                // ‚úÖ **Nastaven√≠ n√°zvu souboru do promƒõnn√©**
                $nahledFoto = $uniqueName;
                echo "<p>Fotka byla √∫spƒõ≈°nƒõ nahr√°na:</p>";
                echo "<img src='/uploads/male/$nahledFoto' alt='N√°hled' style='max-width: 150px;'>";
            } else {
                echo "‚ùå Chyba p≈ôi nahr√°v√°n√≠ souboru!";
            }
        }

        $slug = $this->generateSlug($postData['title']);

        $data = [
            'nazev' => $postData['nazev'],
            'obsah' => $postData['content'],
            'viditelnost' => isset($postData['viditelnost']) ? 1 : 0,
            'nahled_foto' => $nahledFoto,
            'user_id' => $_SESSION['user_id'],
            'autor' => 1,
            'url' => $slug,
            'datum' => date('Y-m-d H:i:s')
        ];

        $result = $this->articleModel->create($data);

        if ($result) {
            header("Location: /admin/articles");
            exit;
        } else {
            echo "Chyba p≈ôi ukl√°d√°n√≠ ƒçl√°nku.";
        }
    }

    public function edit($id)
    {
        $article = $this->articleModel->getById($id); // Naƒçten√≠ ƒçl√°nku podle ID
        if (!$article) {
            echo "ƒål√°nek nenalezen.";
            return;
        }

        $categoryModel = new Category($this->model); // Pou≈æit√≠ modelu kategorie
        $categories = $categoryModel->getAll(); // Naƒçten√≠ v≈°ech kategori√≠

        $view = '../../app/Views/Admin/articles/edit.php';
        include '../../app/Views/Admin/layout/base.php';
    }

    // Aktualizace ƒçl√°nku
    public function update($id, $postData)
    {
        if (empty($postData['nazev'])) {
            echo "N√°zev ƒçl√°nku je povinn√Ω.";
            return;
        }
        if (empty($postData['content'])) {
            echo "Obsah ƒçl√°nku je povinn√Ω.";
            return;
        }

        $targetDir = __DIR__ . '../../../../public/uploads/thumbnails/';
        $nahledFoto = $postData['current_foto']; // Pou≈æijeme aktu√°ln√≠ foto, pokud nen√≠ nov√©

        // Kontrola a vytvo≈ôen√≠ slo≈æky, pokud neexistuje
        if (!is_dir($targetDir)) {
            mkdir($targetDir, 0777, true);
        }

        if (isset($_FILES['nahled_foto']) && $_FILES['nahled_foto']['error'] === UPLOAD_ERR_OK) {
            $noveFoto = basename($_FILES['nahled_foto']['name']);
            $targetFile = $targetDir . $noveFoto;

            if (move_uploaded_file($_FILES['nahled_foto']['tmp_name'], $targetFile)) {
                $nahledFoto = $noveFoto;
                echo "<p>Nov√° fotka byla √∫spƒõ≈°nƒõ nahr√°na:</p>";
                echo "<img src='/uploads/thumbnails/$nahledFoto' alt='N√°hled' style='max-width: 150px;'>";
            }
        }

        $slug = $this->generateSlug($postData['nazev']);

        $data = [
            'id' => $id,
            'nazev' => $postData['nazev'],
            'obsah' => $postData['content'],
            'viditelnost' => isset($postData['viditelnost']) ? 1 : 0,
            'nahled_foto' => $nahledFoto,
            'user_id' => $_SESSION['user_id'],
            'autor' => 1,
            'url' => $slug,
            'datum' => date('Y-m-d H:i:s')
        ];

        $result = $this->articleModel->update($data);

        if ($result) {
            header("Location: /admin/articles");
            exit;
        } else {
            echo "Chyba p≈ôi aktualizaci ƒçl√°nku.";
        }
    }

    public function delete($id)
    {
        $article = $this->articleModel->getById($id); // Z√≠sk√°me ƒçl√°nek podle ID

        if (!$article) {
            die("‚ùå Chyba: ƒål√°nek nenalezen.");
        }

        // ‚úÖ **Smaz√°n√≠ ƒçl√°nku z datab√°ze**
        if ($this->articleModel->delete($id)) {
            header("Location: /admin/articles"); // P≈ôesmƒõrov√°n√≠ na seznam ƒçl√°nk≈Ø
            exit();
        } else {
            die("‚ùå Chyba: ƒål√°nek se nepoda≈ôilo smazat.");
        }
    }

    function createThumbnail($sourcePath, $destinationPath, $thumbWidth, $thumbHeight)
    {
        list($origWidth, $origHeight, $imageType) = getimagesize($sourcePath);

        if (!function_exists('imagecreatefromjpeg')) {
            die("üî• CHYBA: GD knihovna nen√≠ aktivn√≠! Zapni php-gd v PHP.");
        }

        switch ($imageType) {
            case IMAGETYPE_JPEG:
                $image = imagecreatefromjpeg($sourcePath);
                break;
            case IMAGETYPE_PNG:
                $image = imagecreatefrompng($sourcePath);
                break;
            case IMAGETYPE_GIF:
                $image = imagecreatefromgif($sourcePath);
                break;
            default:
                return false;
        }

        // V√Ωpoƒçet nov√Ωch rozmƒõr≈Ø pro o≈ô√≠znut√≠ na 3:2
        $targetRatio = 3 / 2;
        $origRatio = $origWidth / $origHeight;

        if ($origRatio > $targetRatio) {
            // P≈ô√≠li≈° ≈°irok√Ω obr√°zek - o≈ô√≠zneme ≈°√≠≈ôku
            $newWidth = (int) ($origHeight * $targetRatio);
            $newHeight = $origHeight;
            $xOffset = (int) (($origWidth - $newWidth) / 2);
            $yOffset = 0;
        } else {
            // P≈ô√≠li≈° vysok√Ω obr√°zek - o≈ô√≠zneme v√Ω≈°ku
            $newWidth = $origWidth;
            $newHeight = (int) ($origWidth / $targetRatio);
            $xOffset = 0;
            $yOffset = (int) (($origHeight - $newHeight) / 2);
        }

        // Vytvo≈ôen√≠ o≈ô√≠znut√©ho obr√°zku
        $croppedImage = imagecreatetruecolor($newWidth, $newHeight);
        imagecopy($croppedImage, $image, 0, 0, $xOffset, $yOffset, $newWidth, $newHeight);

        // Zmƒõna velikosti na n√°hled
        $thumbnail = imagecreatetruecolor($thumbWidth, $thumbHeight);
        imagecopyresampled($thumbnail, $croppedImage, 0, 0, 0, 0, $thumbWidth, $thumbHeight, $newWidth, $newHeight);

        // Ulo≈æen√≠ v√Ωsledn√©ho n√°hledu
        switch ($imageType) {
            case IMAGETYPE_JPEG:
                imagejpeg($thumbnail, $destinationPath, 90);
                break;
            case IMAGETYPE_PNG:
                imagepng($thumbnail, $destinationPath);
                break;
            case IMAGETYPE_GIF:
                imagegif($thumbnail, $destinationPath);
                break;
        }

        imagedestroy($image);
        imagedestroy($croppedImage);
        imagedestroy($thumbnail);

        return true;
    }

    public function uploadImage()
    {
        $uploadDir = __DIR__ . '/../../../public/uploads/articles/';
        $publicPath = '/uploads/articles/';

        // ‚úÖ Kontrola slo≈æky
        if (!file_exists($uploadDir)) {
            if (!mkdir($uploadDir, 0777, true)) {
                error_log("‚ùå Nepoda≈ôilo se vytvo≈ôit slo≈æku: $uploadDir");
                http_response_code(500);
                echo json_encode(['error' => 'Nepoda≈ôilo se vytvo≈ôit slo≈æku.']);
                return;
            }
        }

        if ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_FILES['file'])) {
            $file = $_FILES['file'];

            // ‚úÖ Logov√°n√≠ informac√≠ o souboru
            error_log("üìù Zpracov√°v√°m soubor: " . print_r($file, true));

            $fileName = uniqid() . '_' . basename($file['name']);
            $filePath = realpath($uploadDir) . DIRECTORY_SEPARATOR . $fileName; // üî• P≈ôevod na absolutn√≠ cestu
            $relativePath = $publicPath . $fileName;

            // ‚úÖ Logov√°n√≠ c√≠lov√© cesty
            error_log("üõ† C√≠lov√° cesta pro obr√°zek: $filePath");

            // ‚úÖ Ukl√°d√°n√≠ souboru a logov√°n√≠ √∫spƒõchu nebo chyby
            if (move_uploaded_file($file['tmp_name'], $filePath)) {
                error_log("‚úÖ Soubor √∫spƒõ≈°nƒõ ulo≈æen na: $filePath");
                header('Content-Type: application/json');
                echo json_encode(['location' => $relativePath]);
            } else {
                error_log("‚ùå Chyba p≈ôi p≈ôesunu souboru do: $filePath");
                http_response_code(500);
                echo json_encode(['error' => 'Nepoda≈ôilo se p≈ôesunout soubor.']);
            }
        } else {
            error_log("‚ùå Neplatn√Ω po≈æadavek nebo soubor chyb√≠.");
            http_response_code(400);
            echo json_encode(['error' => 'Neplatn√Ω po≈æadavek nebo soubor chyb√≠.']);
        }
    }

    // ‚úÖ Generov√°n√≠ validn√≠ho URL slugu z n√°zvu
    private function generateSlug($title)
    {
        // P≈ôevod na mal√° p√≠smena, odstranƒõn√≠ diakritiky a speci√°ln√≠ch znak≈Ø
        $slug = iconv('UTF-8', 'ASCII//TRANSLIT', $title);
        $slug = preg_replace('/[^a-zA-Z0-9 -]/', '', $slug);  // Povolit pouze p√≠smena, ƒç√≠sla a pomlƒçky
        $slug = strtolower(trim($slug));
        $slug = preg_replace('/[\s-]+/', '-', $slug);  // Nahrazen√≠ mezer a v√≠cen√°sobn√Ωch pomlƒçek jedinou pomlƒçkou

        return $slug;
    }
}
